# Import the required libraries.
import time
import RPi.GPIO as GPIO
import Adafruit_DHT

# Set the DHT sensor type: DHT11, DHT22, or AM2302.
DHT11 = Adafruit_DHT.DHT11

TRIG_PIN = 8
ECHO_PIN = 11
BUZZER_PIN = 13
DHT11_PIN = 22
BUZZER_PIN2= 10
PRESS_PIN = 16
PRESS_PIN2 = 18
RLED_PIN = 38
GLED_PIN = 40


# Set the mode of the GPIO pins.
GPIO.setmode(GPIO.BOARD)

# Initialize the directions (I/O) for the pins.
GPIO.setup(TRIG_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)
GPIO.setup(BUZZER_PIN, GPIO.OUT)
GPIO.setup(BUZZER_PIN2, GPIO.OUT)
GPIO.setup(PRESS_PIN, GPIO.IN)
GPIO.setup(PRESS_PIN2, GPIO.IN)
GPIO.setup(RLED_PIN, GPIO.OUT)
GPIO.setup(GLED_PIN, GPIO.OUT)


while (True):
# Set the value of the trigger pin to LOW.
GPIO.output(TRIG, 0)
# Wait for 0.5 second before starting.
time.sleep(0.5)
# Set the value of the trigger pin to HIGH.
GPIO.output(TRIG, 1)
# Wait for a specific time.
time.sleep(0.00001)
# Set the value of the trigger pin to LOW.
GPIO.output(TRIG, 0)
# Wait until the echo pin becomes LOW.
while GPIO.input(ECHO) == 0:
pulseStart = time.time()
# Wait until the echo pin becomes HIGH.
while GPIO.input(ECHO) == 1:
pulseEnd = time.time()
pulse = pulseEnd - pulseStart
distance = pulse * 17150
print ("Distance (in CM): %0.3f", distance)
v1=0 , v2=0

if (distance < 100.0 and ):
# Print the BUZZER state.
print ("Buzzer is turned ON!")
# Turn the BUZZER ON.
GPIO.output(BUZZER_PIN, 1)
v1=1
sw = GPIO.input(PRESS_PIN)
if (sw):
# Print the BUZZER state.
print ("Buzzer is turned OFF!")
# Turn the BUZZER OFF.
GPIO.output(BUZZER_PIN, 0)
v1=0


# Read the DHT11 two values.
humidity, temperature = Adafruit_DHT.read_retry(DHT11, DHT11_PIN)
if (humidity is not None and temperature is not None):
print ("T: %0.3f oC, and H: %0.3f %%" % (temperature, humidity))
if temperature > 50.0 :
# Print the BUZZER state.
print ("Buzzer is turned ON!")
# Turn the BUZZER ON.
GPIO.output(BUZZER_PIN2, 1)
v2=1
sw2 = GPIO.input(PRESS_PIN2)
if (sw2):
# Print the BUZZER state.
print ("Buzzer is turned OFF!")
# Turn the BUZZER OFF.
GPIO.output(BUZZER_PIN2, 0)
v2=0


if (v1 and v2):
# Turn the RED LED ON.
GPIO.output(RLED_PIN, 1)
elif (v1=0 and v2=0):
	# Turn the RED LED ON.
	GPIO.output(GLED_PIN, 1)
else:
# Turn the two LEDS OFF.
GPIO.output(RLED_PIN, 0)
GPIO.output(GLED_PIN, 0)

time.sleep(1)
